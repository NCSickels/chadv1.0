<!DOCTYPE html>
<html><head>
<title> LDRA Testbed Code Review Report </title>

<style type="text/css">
.orag-line, .break {background-color: #ff7b42;}
.blue-line {background-color: #000080;}
.break-p {background-color: #000084;}
.break-p, .break {border-radius:10px;}
div {padding:0;margin:0;}
h2,h3,.header {text-align:center;}
table td {text-align:left;}
table {margin:auto;}
 p.pagebreak {page-break-before: always}
 p.nopagebreak {page-break-after: never}
 p.shiftleft {margin-left:-54.0pt}
 ul {padding-left: 20px;}
 br.pagebreak {page-break-before: always}
</style>



<SCRIPT LANGUAGE="Javascript">

function popup(mylink, windowname)
{
if (! window.focus && window.opener)
{
return true;
}
var href;
var temp;
if (typeof(mylink)=='string')
{
href=mylink;
}
else
{
href=mylink.href;
temp = window.open(href, windowname, 'width=600,        height=300,scrollbars=yes');
temp.focus();
return false;
}
}
function targetopener(mylink, closeme, closeonly)
{
if (! (window.focus && window.opener))     return true;
if (! closeonly)                                 window.opener.location.href=mylink.href;
window.blur();
window.opener.focus();
if (closeme)                                    window.close();
return false;
return false;
}

</SCRIPT>

<SCRIPT LANGUAGE="Javascript" SRC="imagejs.js"> 
// -->
</SCRIPT>
</head><body bgcolor="#FFFFF2"  > 

<div class="break"style="width:80%;height:10px;margin:0px auto;display:block;"></div>
<BR>
<a id="top_of_rep">
</a><BR>
<Style type='text/css'><!--A.set1:link{color:#FBFCC8;background:none transparent;text-decoration: none}A.set1:visited{color:#FBFCC8;background:none transparent;text-decoration: none}A.set1:active{color:#FBFCC8;background:none transparent;text-decoration: none}A:link{color:BLUE;background:none transparent;text-decoration: none}A:visited{color:BLUE;background:none transparent;text-decoration: none}A:active{color:BLUE;background:none transparent;text-decoration: none}--></style><CENTER><font size='9'><b> LDRA Testbed &reg Code Review Report </font></b>
</CENTER>
<CENTER><font size='9'><b>  </font></b>
</CENTER>
<CENTER><H1> File : /home/student/ncs0016/senior_design/gen-ai/banner_grabber.cpp </H1>
</CENTER>
<BR>
<BR>
<BR>
<BR>
<CENTER><TABLE BORDER WIDTH=50%><TR><TH BGCOLOR="#FF0000"><font color='#FBFCC8' size='5'> Overall Result:  FAIL </font></TH></TR> </TABLE></CENTER>
<BR>
<BR>
<BR>
<BR>
<BR>
 <CENTER> <TABLE bgcolor="#D7EDED" BORDER WIDTH=80% >
<TR><th >  Report Production </th><th >  Report Configuration </th><th >  Analysis phases </th></TR>
<TR><td > <ul><li>C/C++ LDRA Testbed Version: 9.8.2</li><li>Config. File: /apps/ldra2019/ldra_toolsuite/cpp/cppreport.dat</li><li>Produced On: Fri Feb 21 2025 at 12:57:20</li><li>Penalty File: /apps/ldra2019/ldra_toolsuite/cpp/cpppen.dat</li></ul> </td><td > <ul><li>Report Level: Summary Report</li><li>Procedures Reported: Fails Only</li><li>Programming Standards Model: CERT-C++:2016</li><li>Line Numbers refer to: Original Source File</li><li>Violation Details: Violations Only</li><li>Reporting Scope: Source file and associated header</li></ul> </td><td > <ul><li>Static: Yes</li><li>Complexity: Yes</li><li>Static Data Flow: Yes</li><li>Information Flow: No</li><li>Cross Reference: Yes</li></ul> </td></TR>
</TABLE>
</CENTER>
<BR>
<BR>
<h4><a id="contents">Contents
</a></h4>
Overall Code Review Summary
<BR>
<UL>
<LI> Totals of Violations for each Standard
<BR>
<LI> <a href="#procedure_table">Table of Procedure Results
</a><BR>
<LI> Table of Global Basic Information
<BR>
<BR>
</UL>
<a href="#procedure_reports">Report on Program Components
</a><BR>
<UL>
<LI> Code Review Results Global Program and Selected Procedures
<BR>
<BR>
</UL>
<a href="#key_to_terms">Key to Terms
</a><BR>
<HR>
<BR>
<BR>
<BR>
<BR>
<CENTER> <h2>Overall Code Review Summary</h2>
</CENTER>
 <BR>
<BR>
<h4>Totals of Violations for Selected Code Review Standards
</h4>
'-' indicates required Analysis Phase results are not yet available.
<BR>
'Off' indicates that the standard is switched off in the Penalty File (&lt;lang&gt;pen.dat).
<BR>
'MR'indicates that the standard is Misra Restricted.
<BR>
<BR>
 <CENTER> <TABLE bgcolor="#ECE2E2" BORDER WIDTH=80% >
<TR><th >  Number of Violations </th><th >  LDRA Code </th><th >  Rule Standards </th><th >  CERT-C++:2016 Code
 </th></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 7 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s7">') + document.write('Jump out of procedure.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_env32-c">') + document.write('CERT-C++:2016 ENV32-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 9 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s9">') + document.write('Assignment operation in expression.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp50-cpp">') + document.write('CERT-C++:2016 EXP50-CPP,FIO41-C,PRE31-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 30 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s30">') + document.write('Deprecated usage of ++ or -- operators found.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp18-cpp">') + document.write('CERT-C++:2016 EXP18-CPP,FIO41-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 36 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s36">') + document.write('Function has no return statement.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc37-c">') + document.write('CERT-C++:2016 MSC37-C,MSC52-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 39 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s39">') + document.write('Unsuitable type for loop variable.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_flp30-c">') + document.write('CERT-C++:2016 FLP30-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 41 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s41">') + document.write('Ellipsis used in procedure parameter list.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl50-cpp">') + document.write('CERT-C++:2016 DCL50-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 43 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s43">') + document.write('Use of setjmp/longjmp.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_err52-cpp">') + document.write('CERT-C++:2016 ERR52-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 47 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s47">') + document.write('Array bound exceeded.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_arr30-c">') + document.write('CERT-C++:2016 ARR30-C,ARR39-C,CTR50-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 51 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s51">') + document.write('Shifting value too far.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_int34-c">') + document.write('CERT-C++:2016 INT34-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 54 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s54">') + document.write('Sizeof operator with side effects.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp52-cpp">') + document.write('CERT-C++:2016 EXP52-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 66 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s66">') + document.write('Function with empty return expression.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc37-c">') + document.write('CERT-C++:2016 MSC37-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 70 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s70">') + document.write('Logical comparison of pointers.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_ctr54-cpp">') + document.write('CERT-C++:2016 CTR54-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 71 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s71">') + document.write('Pointer assignment to wider scope.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl30-c">') + document.write('CERT-C++:2016 DCL30-C,EXP54-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 86 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s86">') + document.write('Attempt to define reserved word.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl51-cpp">') + document.write('CERT-C++:2016 DCL51-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 87 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s87">') + document.write('Use of pointer arithmetic.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_ctr54-cpp">') + document.write('CERT-C++:2016 CTR54-CPP,EXP08-CPP') + document.write('</a>') </script> </td></TR>
<TR><td bgcolor='#FF8181', align=center><font color='blue'> <center> <a href='banner_grabber_444_link_popup94S.htm' onClick='return popup(this, "knotes")'> 3</a> </center> </font></td><td bgcolor='#FF8181', ><font color='blue'> 94 S </font></td><td bgcolor='#FF8181', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s94">') + document.write('Casting operation on a pointer.') + document.write('</a>') </script> </font></td><td bgcolor='#FF8181', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp36-c">') + document.write('CERT-C++:2016 EXP36-C,EXP39-C') + document.write('</a>') </script> </font></td></TR>
<TR><td bgcolor='#FF8181', align=center><font color='blue'> <center> <a href='banner_grabber_444_link_popup114S.htm' onClick='return popup(this, "knotes")'> 1</a> </center> </font></td><td bgcolor='#FF8181', ><font color='blue'> 114 S </font></td><td bgcolor='#FF8181', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s114">') + document.write('Expression is not Boolean.') + document.write('</a>') </script> </font></td><td bgcolor='#FF8181', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp45-c">') + document.write('CERT-C++:2016 EXP45-C') + document.write('</a>') </script> </font></td></TR>
<TR><td bgcolor='#FF8181', align=center><font color='blue'> <center> <a href='banner_grabber_444_link_popup118S.htm' onClick='return popup(this, "knotes")'> 1</a> </center> </font></td><td bgcolor='#FF8181', ><font color='blue'> 118 S </font></td><td bgcolor='#FF8181', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s118">') + document.write('main must be int (void) or int (int,char*[]).') + document.write('</a>') </script> </font></td><td bgcolor='#FF8181', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_env31-c">') + document.write('CERT-C++:2016 ENV31-C') + document.write('</a>') </script> </font></td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 122 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s122">') + document.write('Use of abort, exit, etc.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_env32-c">') + document.write('CERT-C++:2016 ENV32-C,ERR06-CPP,ERR50-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 132 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s132">') + document.write('Assignment operator in boolean expression.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp19-cpp">') + document.write('CERT-C++:2016 EXP19-CPP,EXP45-C,MSC02-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 133 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s133">') + document.write('Assignment operator in RHS of && or ||.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp02-cpp">') + document.write('CERT-C++:2016 EXP02-CPP,EXP52-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 134 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s134">') + document.write('Volatile variable in complex expression.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp50-cpp">') + document.write('CERT-C++:2016 EXP50-CPP,FIO41-C,PRE10-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 136 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s136">') + document.write('Bit operator with boolean operand.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp46-c">') + document.write('CERT-C++:2016 EXP46-C,INT13-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 145 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s145">') + document.write('#if has invalid expression.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc40-c">') + document.write('CERT-C++:2016 MSC40-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 157 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s157">') + document.write('Modification of string literal.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_str30-c">') + document.write('CERT-C++:2016 STR30-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 169 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s169">') + document.write('Use of forward reference of class member.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp57-cpp">') + document.write('CERT-C++:2016 EXP57-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 203 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s203">') + document.write('Cast on a constant value.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp55-cpp">') + document.write('CERT-C++:2016 EXP55-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 206 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s206">') + document.write('Class initialiser out of order.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_oop53-cpp">') + document.write('CERT-C++:2016 OOP53-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 218 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s218">') + document.write('Name is used in standard libraries.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl51-cpp">') + document.write('CERT-C++:2016 DCL51-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 219 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s219">') + document.write('User name starts with underscore.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl51-cpp">') + document.write('CERT-C++:2016 DCL51-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 232 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s232">') + document.write('No destructor defined for class.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_mem51-cpp">') + document.write('CERT-C++:2016 MEM51-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 236 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s236">') + document.write('New used in class without assignment op.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_mem51-cpp">') + document.write('CERT-C++:2016 MEM51-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 239 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s239">') + document.write('New used in class without copy constructor.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_mem51-cpp">') + document.write('CERT-C++:2016 MEM51-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 242 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s242">') + document.write('Use of const_cast.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp55-cpp">') + document.write('CERT-C++:2016 EXP55-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 248 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s248">') + document.write('Divide by zero in preprocessor directive.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_int33-c">') + document.write('CERT-C++:2016 INT33-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 286 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s286">') + document.write('Functions defined in header file.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl59-cpp">') + document.write('CERT-C++:2016 DCL59-CPP,DCL60-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 287 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s287">') + document.write('Variable definition in header file.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl60-cpp">') + document.write('CERT-C++:2016 DCL60-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 296 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s296">') + document.write('Function declared at block scope.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl53-cpp">') + document.write('CERT-C++:2016 DCL53-CPP,MSC15-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 303 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s303">') + document.write('Virtual class members need virtual destructor.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_oop52-cpp">') + document.write('CERT-C++:2016 OOP52-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 323 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s323">') + document.write('Switch has more than one default case.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc40-c">') + document.write('CERT-C++:2016 MSC40-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 341 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s341">') + document.write('Preprocessor construct as macro parameter.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_pre32-c">') + document.write('CERT-C++:2016 PRE32-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 344 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s344">') + document.write('Cast on volatile value.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp55-cpp">') + document.write('CERT-C++:2016 EXP55-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 345 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s345">') + document.write('Bit operator with floating point operand.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc40-c">') + document.write('CERT-C++:2016 MSC40-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 387 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s387">') + document.write('Enum init not integer-constant-expression.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc40-c">') + document.write('CERT-C++:2016 MSC40-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 400 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s400">') + document.write('Use of sizeof on a type.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_mem35-c">') + document.write('CERT-C++:2016 MEM35-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 403 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s403">') + document.write('Negative (or potentially negative) shift.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_int34-c">') + document.write('CERT-C++:2016 INT34-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 404 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s404">') + document.write('Array initialisation has too many items.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_ctr02-cpp">') + document.write('CERT-C++:2016 CTR02-CPP,MSC40-C,STR08-CPP,STR32-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 407 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s407">') + document.write('free used on string.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_mem34-c">') + document.write('CERT-C++:2016 MEM34-C,MEM51-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 433 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s433">') + document.write('Type conversion without cast.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp17-cpp">') + document.write('CERT-C++:2016 EXP17-CPP,FIO34-C,FLP03-CPP,INT02-CPP,INT31-C,MSC05-CPP,STR34-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 434 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s434">') + document.write('Signed/unsigned conversion without cast.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_int02-cpp">') + document.write('CERT-C++:2016 INT02-CPP,INT31-C') + document.write('</a>') </script> </td></TR>
</TABLE>
</CENTER>
<BR>
 <CENTER> <TABLE bgcolor="#ECE2E2" BORDER WIDTH=80% >
<TR><th >  Number of Violations </th><th >  LDRA Code </th><th >  Rule Standards </th><th >  CERT-C++:2016 Code
 </th></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 435 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s435">') + document.write('Float/integer conversion without cast.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_flp05-cpp">') + document.write('CERT-C++:2016 FLP05-CPP,FLP34-C,FLP36-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 437 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s437">') + document.write('< > <= >= used on different object pointers.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_ctr54-cpp">') + document.write('CERT-C++:2016 CTR54-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 438 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s438">') + document.write('Pointer subtraction not addressing one array.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_ctr54-cpp">') + document.write('CERT-C++:2016 CTR54-CPP,EXP08-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 439 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s439">') + document.write('Cast from pointer to integral type.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_int11-cpp">') + document.write('CERT-C++:2016 INT11-CPP,INT36-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 440 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s440">') + document.write('Cast from integral type to pointer.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_int11-cpp">') + document.write('CERT-C++:2016 INT11-CPP,INT36-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 445 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s445">') + document.write('Narrower float conversion without cast.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_flp03-cpp">') + document.write('CERT-C++:2016 FLP03-CPP,FLP34-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 453 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s453">') + document.write('Throw found in destructor.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl57-cpp">') + document.write('CERT-C++:2016 DCL57-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 455 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s455">') + document.write('Catch is not by reference.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_err09-cpp">') + document.write('CERT-C++:2016 ERR09-CPP,ERR61-CPP') + document.write('</a>') </script> </td></TR>
<TR><td bgcolor='#FF8181', align=center><font color='blue'> <center> <a href='banner_grabber_444_link_popup458S.htm' onClick='return popup(this, "knotes")'> 1</a> </center> </font></td><td bgcolor='#FF8181', ><font color='blue'> 458 S </font></td><td bgcolor='#FF8181', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s458">') + document.write('Implicit conversion: actual to formal param (MR).') + document.write('</a>') </script> </font></td><td bgcolor='#FF8181', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp37-c">') + document.write('CERT-C++:2016 EXP37-C,INT01-CPP,INT02-CPP,INT07-CPP,MSC05-CPP,STR04-CPP') + document.write('</a>') </script> </font></td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 467 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s467">') + document.write('Virtual member called in ctor/dtor.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_oop50-cpp">') + document.write('CERT-C++:2016 OOP50-CPP') + document.write('</a>') </script> </td></TR>
<TR><td bgcolor='#FF8181', align=center><font color='blue'> <center> <a href='banner_grabber_444_link_popup469S.htm' onClick='return popup(this, "knotes")'> 1</a> </center> </font></td><td bgcolor='#FF8181', ><font color='blue'> 469 S </font></td><td bgcolor='#FF8181', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s469">') + document.write('No copy constructor for complex destructor.') + document.write('</a>') </script> </font></td><td bgcolor='#FF8181', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_mem51-cpp">') + document.write('CERT-C++:2016 MEM51-CPP') + document.write('</a>') </script> </font></td></TR>
<TR><td bgcolor='#FF8181', align=center><font color='blue'> <center> <a href='banner_grabber_444_link_popup470S.htm' onClick='return popup(this, "knotes")'> 1</a> </center> </font></td><td bgcolor='#FF8181', ><font color='blue'> 470 S </font></td><td bgcolor='#FF8181', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s470">') + document.write('No assignment operator for complex destrtor.') + document.write('</a>') </script> </font></td><td bgcolor='#FF8181', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_mem51-cpp">') + document.write('CERT-C++:2016 MEM51-CPP') + document.write('</a>') </script> </font></td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 476 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s476">') + document.write('Array index not unsigned.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_arr30-c">') + document.write('CERT-C++:2016 ARR30-C,CTR50-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 479 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s479">') + document.write('Right shift loses all bits.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_int34-c">') + document.write('CERT-C++:2016 INT34-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 481 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s481">') + document.write('Array with no bounds in struct.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc40-c">') + document.write('CERT-C++:2016 MSC40-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 483 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s483">') + document.write('Freed parameter is not heap item.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_mem34-c">') + document.write('CERT-C++:2016 MEM34-C,MEM50-CPP,MEM51-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 484 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s484">') + document.write('Attempt to use already freed object.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_mem01-cpp">') + document.write('CERT-C++:2016 MEM01-CPP,MEM30-C,MEM50-CPP,MEM51-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 485 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s485">') + document.write('Array deletion without [].') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_mem51-cpp">') + document.write('CERT-C++:2016 MEM51-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 486 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s486">') + document.write('Incorrect number of formats in output function.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_fio00-cpp">') + document.write('CERT-C++:2016 FIO00-CPP,FIO47-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 487 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s487">') + document.write('Insufficient space allocated.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_mem35-c">') + document.write('CERT-C++:2016 MEM35-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 489 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s489">') + document.write('Insufficient space for operation.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_arr30-c">') + document.write('CERT-C++:2016 ARR30-C,ARR39-C,CTR50-CPP,STR31-C,STR50-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 493 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s493">') + document.write('Numeric overflow.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_int08-cpp">') + document.write('CERT-C++:2016 INT08-CPP,INT30-C,INT32-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 494 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s494">') + document.write('Numeric underflow.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_int08-cpp">') + document.write('CERT-C++:2016 INT08-CPP,INT30-C,INT32-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 512 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s512">') + document.write('Use of unnamed namespace.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl59-cpp">') + document.write('CERT-C++:2016 DCL59-CPP') + document.write('</a>') </script> </td></TR>
<TR><td bgcolor='#FF8181', align=center><font color='blue'> <center> <a href='banner_grabber_444_link_popup527S.htm' onClick='return popup(this, "knotes")'> 1</a> </center> </font></td><td bgcolor='#FF8181', ><font color='blue'> 527 S </font></td><td bgcolor='#FF8181', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s527">') + document.write('No master exception handler.') + document.write('</a>') </script> </font></td><td bgcolor='#FF8181', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_err51-cpp">') + document.write('CERT-C++:2016 ERR51-CPP,ERR56-CPP') + document.write('</a>') </script> </font></td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 540 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s540">') + document.write('Cast from pointer to void to pointer.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp16-cpp">') + document.write('CERT-C++:2016 EXP16-CPP,EXP36-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 541 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s541">') + document.write('Catch-all is not last catch.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_err54-cpp">') + document.write('CERT-C++:2016 ERR54-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 549 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s549">') + document.write('Catch in c&acutetor/d&acutetor references nonstatic member.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_err53-cpp">') + document.write('CERT-C++:2016 ERR53-CPP') + document.write('</a>') </script> </td></TR>
<TR><td bgcolor='#FF8181', align=center><font color='blue'> <center> <a href='banner_grabber_444_link_popup554S.htm' onClick='return popup(this, "knotes")'> 3</a> </center> </font></td><td bgcolor='#FF8181', ><font color='blue'> 554 S </font></td><td bgcolor='#FF8181', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s554">') + document.write('Cast to an unrelated type.') + document.write('</a>') </script> </font></td><td bgcolor='#FF8181', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp11-cpp">') + document.write('CERT-C++:2016 EXP11-CPP,EXP39-C,EXP57-CPP') + document.write('</a>') </script> </font></td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 556 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s556">') + document.write('Wrong order of catches for derived class.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_err54-cpp">') + document.write('CERT-C++:2016 ERR54-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 562 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s562">') + document.write('Use of ++,-- or = in macro parameters.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_pre10-cpp">') + document.write('CERT-C++:2016 PRE10-CPP,PRE31-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 565 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s565">') + document.write('Assignment to wider scope.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl30-c">') + document.write('CERT-C++:2016 DCL30-C,EXP54-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 567 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s567">') + document.write('Pointer arithmetic is not on array.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_arr37-c">') + document.write('CERT-C++:2016 ARR37-C,ARR39-C,CTR55-CPP,CTR56-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 572 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s572">') + document.write('Side effect in assert.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_pre31-c">') + document.write('CERT-C++:2016 PRE31-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 573 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s573">') + document.write('Macro concatenation of uni char names.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_pre30-c">') + document.write('CERT-C++:2016 PRE30-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 576 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s576">') + document.write('Function pointer is of wrong type.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp08-cpp">') + document.write('CERT-C++:2016 EXP08-CPP,EXP37-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 580 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s580">') + document.write('Macro redefinition without using #undef.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl51-cpp">') + document.write('CERT-C++:2016 DCL51-CPP,MSC40-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 588 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s588">') + document.write('Use of system function.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_env01-cpp">') + document.write('CERT-C++:2016 ENV01-CPP,ENV02-CPP,ENV03-C,ENV33-C,STR02-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 589 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s589">') + document.write('Format is not appropriate type.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_fio00-cpp">') + document.write('CERT-C++:2016 FIO00-CPP,FIO47-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 591 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s591">') + document.write('Inappropriate use of file pointer.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_fio38-c">') + document.write('CERT-C++:2016 FIO38-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 597 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s597">') + document.write('Use of placement new.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_mem54-cpp">') + document.write('CERT-C++:2016 MEM54-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 600 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s600">') + document.write('Argument of strlen is unterminated.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_str32-c">') + document.write('CERT-C++:2016 STR32-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 606 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s606">') + document.write('Cast involving function pointer.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp36-c">') + document.write('CERT-C++:2016 EXP36-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 612 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s612">') + document.write('inline function should be declared static.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc40-c">') + document.write('CERT-C++:2016 MSC40-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 615 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s615">') + document.write('Conditional operator has incompatible types.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc40-c">') + document.write('CERT-C++:2016 MSC40-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 618 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s618">') + document.write('Use of memcmp between structures.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp42-c">') + document.write('CERT-C++:2016 EXP42-C,EXP62-CPP,FLP37-C') + document.write('</a>') </script> </td></TR>
<TR><td bgcolor='#FF8181', align=center><font color='blue'> <center> <a href='banner_grabber_444_link_popup623S.htm' onClick='return popup(this, "knotes")'> 1</a> </center> </font></td><td bgcolor='#FF8181', ><font color='blue'> 623 S </font></td><td bgcolor='#FF8181', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s623">') + document.write('String assigned to non const object.') + document.write('</a>') </script> </font></td><td bgcolor='#FF8181', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_str05-cpp">') + document.write('CERT-C++:2016 STR05-CPP,STR30-C') + document.write('</a>') </script> </font></td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 629 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s629">') + document.write('Divide by zero found.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_int33-c">') + document.write('CERT-C++:2016 INT33-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 631 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s631">') + document.write('Declaration not reachable.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp53-cpp">') + document.write('CERT-C++:2016 EXP53-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 642 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s642">') + document.write('Function return type with array field.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp35-c">') + document.write('CERT-C++:2016 EXP35-C') + document.write('</a>') </script> </td></TR>
</TABLE>
</CENTER>
<BR>
 <CENTER> <TABLE bgcolor="#ECE2E2" BORDER WIDTH=80% >
<TR><th >  Number of Violations </th><th >  LDRA Code </th><th >  Rule Standards </th><th >  CERT-C++:2016 Code
 </th></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 644 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s644">') + document.write('realloc ptr does not originate from allocation function.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_mem34-c">') + document.write('CERT-C++:2016 MEM34-C,MEM36-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 645 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s645">') + document.write('realloc ptr type does not match target type.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_mem34-c">') + document.write('CERT-C++:2016 MEM34-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 646 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s646">') + document.write('Struct initialisation has too many items.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc40-c">') + document.write('CERT-C++:2016 MSC40-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 652 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s652">') + document.write('Object created by malloc used before initialisation.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp34-c">') + document.write('CERT-C++:2016 EXP34-C,EXP53-CPP,MEM09-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 662 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s662">') + document.write('EOF compared with char.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_fio34-c">') + document.write('CERT-C++:2016 FIO34-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 663 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s663">') + document.write('Invalid value may be passed to function in <ctype.h>.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_str37-c">') + document.write('CERT-C++:2016 STR37-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 692 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s692">') + document.write('Array index is negative.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_arr30-c">') + document.write('CERT-C++:2016 ARR30-C,ARR39-C,CTR50-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 2 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d2">') + document.write('Function does not return a value on all paths.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc37-c">') + document.write('CERT-C++:2016 MSC37-C,MSC52-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 6 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d6">') + document.write('Recursion in procedure calls found.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl56-cpp">') + document.write('CERT-C++:2016 DCL56-CPP,MEM05-CPP,MEM12-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 17 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d17">') + document.write('Identifier not unique within 31 characters.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl40-c">') + document.write('CERT-C++:2016 DCL40-C,MSC14-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 35 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d35">') + document.write('Expression has side effects.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp02-cpp">') + document.write('CERT-C++:2016 EXP02-CPP,EXP50-CPP,FIO41-C,PRE10-CPP,PRE31-C') + document.write('</a>') </script> </td></TR>
<TR><td bgcolor='#FF8181', align=center><font color='blue'> <center> <a href='banner_grabber_444_link_popup41D.htm' onClick='return popup(this, "knotes")'> 7</a> </center> </font></td><td bgcolor='#FF8181', ><font color='blue'> 41 D </font></td><td bgcolor='#FF8181', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d41">') + document.write('Procedure call has no prototype declared.') + document.write('</a>') </script> </font></td><td bgcolor='#FF8181', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp37-c">') + document.write('CERT-C++:2016 EXP37-C') + document.write('</a>') </script> </font></td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 42 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d42">') + document.write('Local pointer returned in function result.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl30-c">') + document.write('CERT-C++:2016 DCL30-C,EXP35-C,EXP54-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 43 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d43">') + document.write('Divide by zero found.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_flp03-cpp">') + document.write('CERT-C++:2016 FLP03-CPP,INT33-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 45 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d45">') + document.write('Pointer not checked for null before use.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_arr30-c">') + document.write('CERT-C++:2016 ARR30-C,CTR50-CPP,ERR33-C,EXP08-CPP,EXP34-C,MEM52-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 48 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d48">') + document.write('Attempt to write to unopened file.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_fio46-c">') + document.write('CERT-C++:2016 FIO46-C,MSC15-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 49 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d49">') + document.write('File pointer not closed on exit.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_fio42-c">') + document.write('CERT-C++:2016 FIO42-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 50 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d50">') + document.write('Memory not freed after last reference.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_err57-cpp">') + document.write('CERT-C++:2016 ERR57-CPP,MEM11-CPP,MEM31-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 51 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d51">') + document.write('Attempt to read from freed memory.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_mem30-c">') + document.write('CERT-C++:2016 MEM30-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 53 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d53">') + document.write('Attempt to use uninitialised pointer.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp08-cpp">') + document.write('CERT-C++:2016 EXP08-CPP,EXP53-CPP,EXP54-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 56 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d56">') + document.write('Throw found with no catch in scope.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_err55-cpp">') + document.write('CERT-C++:2016 ERR55-CPP,ERR56-CPP') + document.write('</a>') </script> </td></TR>
<TR><td bgcolor='#FF8181', align=center><font color='blue'> <center> <a href='banner_grabber_444_link_popup64D.htm' onClick='return popup(this, "knotes")'> 2</a> </center> </font></td><td bgcolor='#FF8181', ><font color='blue'> 64 D </font></td><td bgcolor='#FF8181', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d64">') + document.write('Local not initialised at declaration.') + document.write('</a>') </script> </font></td><td bgcolor='#FF8181', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl19-cpp">') + document.write('CERT-C++:2016 DCL19-CPP,MEM51-CPP') + document.write('</a>') </script> </font></td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 67 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d67">') + document.write('Void function has global variable side effects.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp50-cpp">') + document.write('CERT-C++:2016 EXP50-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 69 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d69">') + document.write('Procedure contains UR data flow anomalies.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp53-cpp">') + document.write('CERT-C++:2016 EXP53-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 71 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d71">') + document.write('No matching catch for throw in called function.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_err56-cpp">') + document.write('CERT-C++:2016 ERR56-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 72 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d72">') + document.write('Potential side effect problem in expression.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp50-cpp">') + document.write('CERT-C++:2016 EXP50-CPP,PRE10-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 75 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d75">') + document.write('Attempt to open file pointer more than once.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_fio21-cpp">') + document.write('CERT-C++:2016 FIO21-CPP,FIO45-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 77 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d77">') + document.write('Local structure returned in function result.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl30-c">') + document.write('CERT-C++:2016 DCL30-C,EXP35-C,EXP54-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 80 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d80">') + document.write('Potentially unused function-modified value.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_err33-c">') + document.write('CERT-C++:2016 ERR33-C,FIO04-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 82 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d82">') + document.write('fsetpos values not generated by fgetpos.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_fio44-c">') + document.write('CERT-C++:2016 FIO44-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 84 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d84">') + document.write('No fseek or flush before I/O.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_fio39-c">') + document.write('CERT-C++:2016 FIO39-C,MSC15-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 86 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d86">') + document.write('User input not checked before use.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_fio30-c">') + document.write('CERT-C++:2016 FIO30-C,MSC08-CPP,MSC09-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 87 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d87">') + document.write('Illegal shared object in signal handler.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_sig00-cpp">') + document.write('CERT-C++:2016 SIG00-CPP,SIG31-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 92 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d92">') + document.write('C&acutetor/d&acutetor calls virtual function.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_oop50-cpp">') + document.write('CERT-C++:2016 OOP50-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 97 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d97">') + document.write('Signal called from within signal handler.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_sig01-cpp">') + document.write('CERT-C++:2016 SIG01-CPP,SIG34-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 107 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d107">') + document.write('Attempt to change system call capture string.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_env30-c">') + document.write('CERT-C++:2016 ENV30-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 109 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d109">') + document.write('Tainted argument to formatted i/o function.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_str02-cpp">') + document.write('CERT-C++:2016 STR02-CPP,STR31-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 111 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d111">') + document.write('errno checked without having been set for errno setting fn.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_err30-c">') + document.write('CERT-C++:2016 ERR30-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 112 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d112">') + document.write('Free called twice on same variable.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_mem01-cpp">') + document.write('CERT-C++:2016 MEM01-CPP,MEM30-C,MEM51-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 115 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d115">') + document.write('Copy length parameter not checked before use.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_mem35-c">') + document.write('CERT-C++:2016 MEM35-C') + document.write('</a>') </script> </td></TR>
<TR><td bgcolor='#FF8181', align=center><font color='blue'> <center> <a href='banner_grabber_444_link_popup121D.htm' onClick='return popup(this, "knotes")'> 1</a> </center> </font></td><td bgcolor='#FF8181', ><font color='blue'> 121 D </font></td><td bgcolor='#FF8181', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d121">') + document.write('errno neither set nor checked for errno setting function.') + document.write('</a>') </script> </font></td><td bgcolor='#FF8181', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_err10-cpp">') + document.write('CERT-C++:2016 ERR10-CPP,ERR30-C') + document.write('</a>') </script> </font></td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 122 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d122">') + document.write('errno not checked after being set for errno setting fn.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_err10-cpp">') + document.write('CERT-C++:2016 ERR10-CPP,ERR30-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 123 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d123">') + document.write('File pointer not checked for null before use.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp34-c">') + document.write('CERT-C++:2016 EXP34-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 124 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d124">') + document.write('Var set by std lib func return not checked before use.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_err33-c">') + document.write('CERT-C++:2016 ERR33-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 125 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d125">') + document.write('free called on variable with no allocated space.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_mem34-c">') + document.write('CERT-C++:2016 MEM34-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 127 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d127">') + document.write('Local or member denominator not checked before use.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_int33-c">') + document.write('CERT-C++:2016 INT33-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 128 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d128">') + document.write('Global pointer not checked within this procedure.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp34-c">') + document.write('CERT-C++:2016 EXP34-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 129 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d129">') + document.write('Global file pointer not checked within this procedure.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp34-c">') + document.write('CERT-C++:2016 EXP34-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 130 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d130">') + document.write('Global set by std lib func return not checked before use.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_err33-c">') + document.write('CERT-C++:2016 ERR33-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 131 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d131">') + document.write('Global denominator not checked within this procedure.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_int33-c">') + document.write('CERT-C++:2016 INT33-C') + document.write('</a>') </script> </td></TR>
</TABLE>
</CENTER>
<BR>
 <CENTER> <TABLE bgcolor="#ECE2E2" BORDER WIDTH=80% >
<TR><th >  Number of Violations </th><th >  LDRA Code </th><th >  Rule Standards </th><th >  CERT-C++:2016 Code
 </th></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 132 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d132">') + document.write('errno checked after call to non-errno setting function.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_err30-c">') + document.write('CERT-C++:2016 ERR30-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 133 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d133">') + document.write('Pointer from system function used after subsequent call.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_env34-c">') + document.write('CERT-C++:2016 ENV34-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 134 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d134">') + document.write('errno not checked before subsequent function call.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_err30-c">') + document.write('CERT-C++:2016 ERR30-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 135 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d135">') + document.write('Pointer assigned to NULL may be dereferenced.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp34-c">') + document.write('CERT-C++:2016 EXP34-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 136 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d136">') + document.write('Global pointer assigned to NULL may be dereferenced.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp34-c">') + document.write('CERT-C++:2016 EXP34-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 137 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d137">') + document.write('Parameter used as denominator not checked before use.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp34-c">') + document.write('CERT-C++:2016 EXP34-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 140 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d140">') + document.write('Copy source parameter not checked before use.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_str31-c">') + document.write('CERT-C++:2016 STR31-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 141 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d141">') + document.write('Heap-based array index not checked before use.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_arr30-c">') + document.write('CERT-C++:2016 ARR30-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 1 X </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_x1">') + document.write('Declaration types do not match across a system.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl40-c">') + document.write('CERT-C++:2016 DCL40-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 64 X </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_x64">') + document.write('Array bound exceeded at call.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_arr30-c">') + document.write('CERT-C++:2016 ARR30-C,ARR38-C,ARR39-C,CTR50-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 66 X </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_x66">') + document.write('Insufficient array space at call.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_arr30-c">') + document.write('CERT-C++:2016 ARR30-C,ARR38-C,ARR39-C,CTR50-CPP,STR31-C,STR50-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 68 X </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_x68">') + document.write('Parameter indexing array too big at call.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_arr30-c">') + document.write('CERT-C++:2016 ARR30-C,ARR38-C,ARR39-C,CTR50-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 69 X </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_x69">') + document.write('Global array bound exceeded at use.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_arr30-c">') + document.write('CERT-C++:2016 ARR30-C,ARR38-C,ARR39-C,CTR50-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 70 X </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_x70">') + document.write('Array has insufficient space.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_arr30-c">') + document.write('CERT-C++:2016 ARR30-C,ARR38-C,ARR39-C,CTR50-CPP,STR31-C,STR50-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 71 X </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_x71">') + document.write('Insufficient space for copy.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_arr30-c">') + document.write('CERT-C++:2016 ARR30-C,ARR38-C,ARR39-C,CTR50-CPP,STR31-C,STR50-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 79 X </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_x79">') + document.write('Size mismatch in memcpy/memset.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_arr30-c">') + document.write('CERT-C++:2016 ARR30-C,ARR38-C,CTR50-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 80 X </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_x80">') + document.write('Divide by zero found.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_int33-c">') + document.write('CERT-C++:2016 INT33-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 1 Q </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_q1">') + document.write('Call has execution order dependant side effects.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp02-cpp">') + document.write('CERT-C++:2016 EXP02-CPP,EXP50-CPP,FIO41-C,PRE10-CPP,PRE31-C') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 1 J </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_j1">') + document.write('Unreachable Code found.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp54-cpp">') + document.write('CERT-C++:2016 EXP54-CPP,MSC06-CPP,MSC07-CPP') + document.write('</a>') </script> </td></TR>
</TABLE>
</CENTER>
<BR>
<BR>
 <CENTER> <TABLE bgcolor="#ECE2E2" BORDER WIDTH=80% >
<TR><th >  Number of Violations </th><th >  LDRA Code </th><th >  Checking Standards </th><th >  CERT-C++:2016 Code
 </th></TR>
<TR><td bgcolor='#FF8181', align=center><font color='blue'> <center> <a href='banner_grabber_444_link_popup44S.htm' onClick='return popup(this, "knotes")'> 1</a> </center> </font></td><td bgcolor='#FF8181', ><font color='blue'> 44 S </font></td><td bgcolor='#FF8181', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s44">') + document.write('Use of banned function, type or variable.') + document.write('</a>') </script> </font></td><td bgcolor='#FF8181', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_con37-c">') + document.write('CERT-C++:2016 CON37-C,DCL03-CPP,ERR01-CPP,ERR06-CPP,ERR32-C,ERR34-C,EXP47-C,FIO03-CPP,FIO05-CPP,FIO06-CPP,FIO09-CPP,FIO18-CPP,FIO19-CPP,FIO37-C,FIO40-C,INT05-CPP,INT06-CPP,MEM08-CPP,MSC30-C,MSC33-C,MSC50-CPP,OOP57-CPP,SIG02-CPP,SIG35-C,STR03-CPP') + document.write('</a>') </script> </font></td></TR>
</TABLE>
</CENTER>
<BR>
<BR>
 <CENTER> <TABLE bgcolor="#ECE2E2" BORDER WIDTH=80% >
<TR><th >  Number of Violations </th><th >  LDRA Code </th><th >  Recommendation Standards </th><th >  CERT-C++:2016 Code
 </th></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 5 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s5">') + document.write('Empty then clause.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc03-cpp">') + document.write('CERT-C++:2016 MSC03-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 26 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s26">') + document.write('Loop control expression may not terminate loop.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_mem05-cpp">') + document.write('CERT-C++:2016 MEM05-CPP,MEM12-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 35 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s35">') + document.write('Static procedure is not explicitly called in code analysed.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc06-cpp">') + document.write('CERT-C++:2016 MSC06-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 38 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s38">') + document.write('Use of static class member.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc19-cpp">') + document.write('CERT-C++:2016 MSC19-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 40 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s40">') + document.write('Loop index is not declared locally.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl07-cpp">') + document.write('CERT-C++:2016 DCL07-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 42 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s42">') + document.write('Use of bit field in structure declaration.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc14-cpp">') + document.write('CERT-C++:2016 MSC14-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 48 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s48">') + document.write('No default case in switch statement.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc01-cpp">') + document.write('CERT-C++:2016 MSC01-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 49 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s49">') + document.write('Logical conjunctions need brackets.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp00-cpp">') + document.write('CERT-C++:2016 EXP00-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 50 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s50">') + document.write('Use of shift operator on signed type.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_int13-cpp">') + document.write('CERT-C++:2016 INT13-CPP,INT16-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 52 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s52">') + document.write('Unsigned expression negated.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_int02-cpp">') + document.write('CERT-C++:2016 INT02-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 56 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s56">') + document.write('Equality comparison of floating point.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_flp02-cpp">') + document.write('CERT-C++:2016 FLP02-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 57 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s57">') + document.write('Statement with no side effect.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc03-cpp">') + document.write('CERT-C++:2016 MSC03-CPP,MSC06-CPP,MSC07-CPP,MSC12-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 58 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s58">') + document.write('Null statement found.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc03-cpp">') + document.write('CERT-C++:2016 MSC03-CPP,PRE11-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 59 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s59">') + document.write('Else alternative missing in if.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc01-cpp">') + document.write('CERT-C++:2016 MSC01-CPP,MSC03-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 62 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s62">') + document.write('Switch case not terminated with break.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc18-cpp">') + document.write('CERT-C++:2016 MSC18-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 64 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s64">') + document.write('Void procedure used in expression.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc15-cpp">') + document.write('CERT-C++:2016 MSC15-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 65 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s65">') + document.write('Void variable passed as parameter.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc15-cpp">') + document.write('CERT-C++:2016 MSC15-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 69 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s69">') + document.write('#pragma used.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc14-cpp">') + document.write('CERT-C++:2016 MSC14-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 76 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s76">') + document.write('More than one of # or ## in a macro.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_pre05-cpp">') + document.write('CERT-C++:2016 PRE05-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 77 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s77">') + document.write('Macro replacement list needs parentheses.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_pre02-cpp">') + document.write('CERT-C++:2016 PRE02-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 78 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s78">') + document.write('Macro parameter not in brackets.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_pre01-cpp">') + document.write('CERT-C++:2016 PRE01-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 79 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s79">') + document.write('Macro contains unacceptable items.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_pre00-cpp">') + document.write('CERT-C++:2016 PRE00-CPP,PRE03-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 81 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s81">') + document.write('Use of trigraph.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_pre07-cpp">') + document.write('CERT-C++:2016 PRE07-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 85 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s85">') + document.write('Incomplete initialisation of enumerator.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_int09-cpp">') + document.write('CERT-C++:2016 INT09-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 96 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s96">') + document.write('Use of mixed mode arithmetic.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp17-cpp">') + document.write('CERT-C++:2016 EXP17-CPP,INT02-CPP,INT07-CPP,MSC05-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 99 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s99">') + document.write('Function use is not a call.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc02-cpp">') + document.write('CERT-C++:2016 MSC02-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 100 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s100">') + document.write('#include filename is non conformant.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc15-cpp">') + document.write('CERT-C++:2016 MSC15-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 101 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s101">') + document.write('Function return type inconsistent.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_int02-cpp">') + document.write('CERT-C++:2016 INT02-CPP,INT07-CPP,MSC05-CPP,STR04-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 107 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s107">') + document.write('Type mismatch in ternary expression.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_int02-cpp">') + document.write('CERT-C++:2016 INT02-CPP,MSC05-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 109 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s109">') + document.write('Array subscript is not integral.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc15-cpp">') + document.write('CERT-C++:2016 MSC15-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 113 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s113">') + document.write('Non standard character in source.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc09-cpp">') + document.write('CERT-C++:2016 MSC09-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 115 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s115">') + document.write('String incorrectly terminated.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_str03-cpp">') + document.write('CERT-C++:2016 STR03-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 119 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s119">') + document.write('Nested comment found.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc04-cpp">') + document.write('CERT-C++:2016 MSC04-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 120 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s120">') + document.write('Use of bit operator on signed type.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_int13-cpp">') + document.write('CERT-C++:2016 INT13-CPP,INT16-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 125 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s125">') + document.write('Use of ## or # in a macro.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_pre05-cpp">') + document.write('CERT-C++:2016 PRE05-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 127 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s127">') + document.write('Array has no bounds specified.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_ctr02-cpp">') + document.write('CERT-C++:2016 CTR02-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 130 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s130">') + document.write('Included file is not permitted.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_fio17-cpp">') + document.write('CERT-C++:2016 FIO17-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 131 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s131">') + document.write('Name reused in inner scope.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl01-cpp">') + document.write('CERT-C++:2016 DCL01-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 139 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s139">') + document.write('Construct leads to infeasible code.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc07-cpp">') + document.write('CERT-C++:2016 MSC07-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 140 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s140">') + document.write('Infeasible loop condition found.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_mem05-cpp">') + document.write('CERT-C++:2016 MEM05-CPP,MEM12-CPP,MSC07-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 156 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s156">') + document.write('Use of &acutedefined&acute keyword in macro body.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc15-cpp">') + document.write('CERT-C++:2016 MSC15-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 159 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s159">') + document.write('Comparing pointer with zero or NULL.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_mem10-cpp">') + document.write('CERT-C++:2016 MEM10-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 176 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s176">') + document.write('Non standard escape sequence in source.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc10-cpp">') + document.write('CERT-C++:2016 MSC10-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 200 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s200">') + document.write('Define used for numeric constant.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl00-cpp">') + document.write('CERT-C++:2016 DCL00-CPP') + document.write('</a>') </script> </td></TR>
<TR><td bgcolor='yellow', align=center><font color='blue'> <CENTER>  9 </CENTER> </font></td><td bgcolor='yellow', ><font color='blue'> 201 S </font></td><td bgcolor='yellow', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s201">') + document.write('Use of numeric literal in expression.') + document.write('</a>') </script> </font></td><td bgcolor='yellow', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl06-cpp">') + document.write('CERT-C++:2016 DCL06-CPP,EXP07-CPP,EXP09-CPP') + document.write('</a>') </script> </font></td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 202 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s202">') + document.write('Class data is not explicitly private.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_oop00-cpp">') + document.write('CERT-C++:2016 OOP00-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 211 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s211">') + document.write('Overloaded &&, || or comma.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl10-cpp">') + document.write('CERT-C++:2016 DCL10-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 233 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s233">') + document.write('No copy constructor for class with pointers.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_oop06-cpp">') + document.write('CERT-C++:2016 OOP06-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 234 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s234">') + document.write('No assignment operator for class with pointers.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_oop06-cpp">') + document.write('CERT-C++:2016 OOP06-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 243 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s243">') + document.write('Included file not protected with #define.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_pre06-cpp">') + document.write('CERT-C++:2016 PRE06-CPP') + document.write('</a>') </script> </td></TR>
</TABLE>
</CENTER>
<BR>
 <CENTER> <TABLE bgcolor="#ECE2E2" BORDER WIDTH=80% >
<TR><th >  Number of Violations </th><th >  LDRA Code </th><th >  Recommendation Standards </th><th >  CERT-C++:2016 Code
 </th></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 245 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s245">') + document.write('Case statement in nested block.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc20-cpp">') + document.write('CERT-C++:2016 MSC20-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 252 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s252">') + document.write('Lower case suffix to literal number.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl16-cpp">') + document.write('CERT-C++:2016 DCL16-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 262 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s262">') + document.write('Non virtual function redefined.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_oop02-cpp">') + document.write('CERT-C++:2016 OOP02-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 299 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s299">') + document.write('Pointer to function declared without typedef.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl05-cpp">') + document.write('CERT-C++:2016 DCL05-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 302 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s302">') + document.write('Comment possibly contains code.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc04-cpp">') + document.write('CERT-C++:2016 MSC04-CPP') + document.write('</a>') </script> </td></TR>
<TR><td bgcolor='yellow', align=center><font color='blue'> <CENTER>  3 </CENTER> </font></td><td bgcolor='yellow', ><font color='blue'> 306 S </font></td><td bgcolor='yellow', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s306">') + document.write('Use of C type cast.') + document.write('</a>') </script> </font></td><td bgcolor='yellow', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp05-cpp">') + document.write('CERT-C++:2016 EXP05-CPP') + document.write('</a>') </script> </font></td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 319 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s319">') + document.write('Constructor has insufficient initialisers.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl19-cpp">') + document.write('CERT-C++:2016 DCL19-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 324 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s324">') + document.write('Macro call has wrong number of parameters.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc15-cpp">') + document.write('CERT-C++:2016 MSC15-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 329 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s329">') + document.write('Operation not appropriate to plain char.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_int07-cpp">') + document.write('CERT-C++:2016 INT07-CPP,STR00-CPP,STR04-CPP,STR07-CPP') + document.write('</a>') </script> </td></TR>
<TR><td bgcolor='yellow', align=center><font color='blue'> <CENTER>  3 </CENTER> </font></td><td bgcolor='yellow', ><font color='blue'> 331 S </font></td><td bgcolor='yellow', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s331">') + document.write('Literal value requires a U suffix.') + document.write('</a>') </script> </font></td><td bgcolor='yellow', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_int13-cpp">') + document.write('CERT-C++:2016 INT13-CPP') + document.write('</a>') </script> </font></td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 332 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s332">') + document.write('Widening cast on complex integer expression (MR).') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_int02-cpp">') + document.write('CERT-C++:2016 INT02-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 334 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s334">') + document.write('No cast when ~ or << applied to small types (MR).') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp15-cpp">') + document.write('CERT-C++:2016 EXP15-CPP,INT02-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 335 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s335">') + document.write('Operator defined contains illegal items.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc15-cpp">') + document.write('CERT-C++:2016 MSC15-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 336 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s336">') + document.write('#if expansion contains define operator.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc15-cpp">') + document.write('CERT-C++:2016 MSC15-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 339 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s339">') + document.write('#include directive with illegal items.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc15-cpp">') + document.write('CERT-C++:2016 MSC15-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 340 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s340">') + document.write('Use of function like macro.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_pre00-cpp">') + document.write('CERT-C++:2016 PRE00-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 358 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s358">') + document.write('Class member name reused.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl01-cpp">') + document.write('CERT-C++:2016 DCL01-CPP') + document.write('</a>') </script> </td></TR>
<TR><td bgcolor='yellow', align=center><font color='blue'> <CENTER>  1 </CENTER> </font></td><td bgcolor='yellow', ><font color='blue'> 359 S </font></td><td bgcolor='yellow', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s359">') + document.write('Default parameter use.') + document.write('</a>') </script> </font></td><td bgcolor='yellow', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_oop04-cpp">') + document.write('CERT-C++:2016 OOP04-CPP') + document.write('</a>') </script> </font></td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 361 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s361">') + document.write('Expression needs brackets.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp00-cpp">') + document.write('CERT-C++:2016 EXP00-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 381 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s381">') + document.write('Enum, struct or union not typedeffed.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl05-cpp">') + document.write('CERT-C++:2016 DCL05-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 382 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s382">') + document.write('(void) missing for discarded return value.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_err10-cpp">') + document.write('CERT-C++:2016 ERR10-CPP,EXP12-CPP,FIO04-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 392 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s392">') + document.write('Class data accessible thru non const member.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_oop08-cpp">') + document.write('CERT-C++:2016 OOP08-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 393 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s393">') + document.write('Single parameter constructor not &acuteexplicit&acute.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_oop09-cpp">') + document.write('CERT-C++:2016 OOP09-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 394 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s394">') + document.write('Conversion function found.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_oop01-cpp">') + document.write('CERT-C++:2016 OOP01-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 397 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s397">') + document.write('Array initialisation has insufficient items.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_ctr02-cpp">') + document.write('CERT-C++:2016 CTR02-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 401 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s401">') + document.write('Use of sizeof on an array parameter.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_ctr01-cpp">') + document.write('CERT-C++:2016 CTR01-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 406 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s406">') + document.write('Use of ++ or -- on RHS of && or || operator.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp02-cpp">') + document.write('CERT-C++:2016 EXP02-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 408 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s408">') + document.write('Volatile variable accessed on RHS of && or ||.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp02-cpp">') + document.write('CERT-C++:2016 EXP02-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 412 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s412">') + document.write('Undefined behaviour, \\ before E-O-F.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc15-cpp">') + document.write('CERT-C++:2016 MSC15-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 427 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s427">') + document.write('Filename in #include not in < > or " ".') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc15-cpp">') + document.write('CERT-C++:2016 MSC15-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 432 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s432">') + document.write('Inappropriate type - should be plain char.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_int07-cpp">') + document.write('CERT-C++:2016 INT07-CPP,STR00-CPP,STR04-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 446 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s446">') + document.write('Narrower int conversion without cast.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_int02-cpp">') + document.write('CERT-C++:2016 INT02-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 451 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s451">') + document.write('No cast for widening complex float expression (MR).') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_flp03-cpp">') + document.write('CERT-C++:2016 FLP03-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 452 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s452">') + document.write('No cast for widening complex int expression (MR).') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_int02-cpp">') + document.write('CERT-C++:2016 INT02-CPP,INT18-CPP') + document.write('</a>') </script> </td></TR>
<TR><td bgcolor='yellow', align=center><font color='blue'> <CENTER>  1 </CENTER> </font></td><td bgcolor='yellow', ><font color='blue'> 454 S </font></td><td bgcolor='yellow', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s454">') + document.write('Throw type is not a class type.') + document.write('</a>') </script> </font></td><td bgcolor='yellow', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_err08-cpp">') + document.write('CERT-C++:2016 ERR08-CPP,ERR09-CPP') + document.write('</a>') </script> </font></td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 457 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s457">') + document.write('Implicit int widening for function return (MR).') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_int02-cpp">') + document.write('CERT-C++:2016 INT02-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 465 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s465">') + document.write('Struct/union not completely specified.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc15-cpp">') + document.write('CERT-C++:2016 MSC15-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 482 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s482">') + document.write('Incomplete structure referenced.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc15-cpp">') + document.write('CERT-C++:2016 MSC15-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 488 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s488">') + document.write('Value outside range of underlying type.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_int08-cpp">') + document.write('CERT-C++:2016 INT08-CPP') + document.write('</a>') </script> </td></TR>
<TR><td bgcolor='yellow', align=center><font color='blue'> <CENTER>  2 </CENTER> </font></td><td bgcolor='yellow', ><font color='blue'> 497 S </font></td><td bgcolor='yellow', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s497">') + document.write('Type is incomplete in translation unit.') + document.write('</a>') </script> </font></td><td bgcolor='yellow', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc15-cpp">') + document.write('CERT-C++:2016 MSC15-CPP') + document.write('</a>') </script> </font></td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 505 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s505">') + document.write('Control variable not declared in for loop.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl07-cpp">') + document.write('CERT-C++:2016 DCL07-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 508 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s508">') + document.write('Operator & overloaded.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl10-cpp">') + document.write('CERT-C++:2016 DCL10-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 510 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s510">') + document.write('Loop counter increment and operator defect.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc21-cpp">') + document.write('CERT-C++:2016 MSC21-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 520 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s520">') + document.write('Bit field is not bool or explicit integral.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_int12-cpp">') + document.write('CERT-C++:2016 INT12-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 523 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s523">') + document.write('Exception type is pointer.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_err08-cpp">') + document.write('CERT-C++:2016 ERR08-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 529 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s529">') + document.write('Static member initialised/assigned in constructor.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_oop10-cpp">') + document.write('CERT-C++:2016 OOP10-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 545 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s545">') + document.write('Assignment of overlapping storage.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc15-cpp">') + document.write('CERT-C++:2016 MSC15-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 553 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s553">') + document.write('Function and proto should both be static.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl15-cpp">') + document.write('CERT-C++:2016 DCL15-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 555 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s555">') + document.write('Base class member name not unique.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_oop07-cpp">') + document.write('CERT-C++:2016 OOP07-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 558 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s558">') + document.write('Template may lead to ill-formed program.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl12-cpp">') + document.write('CERT-C++:2016 DCL12-CPP') + document.write('</a>') </script> </td></TR>
</TABLE>
</CENTER>
<BR>
 <CENTER> <TABLE bgcolor="#ECE2E2" BORDER WIDTH=80% >
<TR><th >  Number of Violations </th><th >  LDRA Code </th><th >  Recommendation Standards </th><th >  CERT-C++:2016 Code
 </th></TR>
<TR><td bgcolor='yellow', align=center><font color='blue'> <CENTER>  1 </CENTER> </font></td><td bgcolor='yellow', ><font color='blue'> 560 S </font></td><td bgcolor='yellow', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s560">') + document.write('Scope of variable could be reduced.') + document.write('</a>') </script> </font></td><td bgcolor='yellow', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl07-cpp">') + document.write('CERT-C++:2016 DCL07-CPP') + document.write('</a>') </script> </font></td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 568 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s568">') + document.write('#include "filename" uses standard library name.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_pre04-cpp">') + document.write('CERT-C++:2016 PRE04-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 577 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s577">') + document.write('Sizeof argument is a pointer.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_ctr01-cpp">') + document.write('CERT-C++:2016 CTR01-CPP,EXP01-CPP') + document.write('</a>') </script> </td></TR>
<TR><td bgcolor='yellow', align=center><font color='blue'> <CENTER>  2 </CENTER> </font></td><td bgcolor='yellow', ><font color='blue'> 578 S </font></td><td bgcolor='yellow', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s578">') + document.write('Sizeof used in arithmetic expression.') + document.write('</a>') </script> </font></td><td bgcolor='yellow', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp03-cpp">') + document.write('CERT-C++:2016 EXP03-CPP') + document.write('</a>') </script> </font></td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 579 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s579">') + document.write('More than one variable per declaration.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl04-cpp">') + document.write('CERT-C++:2016 DCL04-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 582 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s582">') + document.write('const object reassigned.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl13-cpp">') + document.write('CERT-C++:2016 DCL13-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 584 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s584">') + document.write('Remainder of % op could be negative.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_int10-cpp">') + document.write('CERT-C++:2016 INT10-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 587 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s587">') + document.write('Const local variable not immediately initialised.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc15-cpp">') + document.write('CERT-C++:2016 MSC15-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 590 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s590">') + document.write('Mode fault in fopen.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_fio11-cpp">') + document.write('CERT-C++:2016 FIO11-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 592 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s592">') + document.write('Use of filename based functions.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_fio01-cpp">') + document.write('CERT-C++:2016 FIO01-CPP,FIO10-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 593 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s593">') + document.write('Use fseek() rather than rewind().') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_fio07-cpp">') + document.write('CERT-C++:2016 FIO07-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 594 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s594">') + document.write('Use setvbuf() rather than setbuf().') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_fio12-cpp">') + document.write('CERT-C++:2016 FIO12-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 601 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s601">') + document.write('Insufficient overridden members.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_oop03-cpp">') + document.write('CERT-C++:2016 OOP03-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 602 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s602">') + document.write('strtok may change the parse string.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_str06-cpp">') + document.write('CERT-C++:2016 STR06-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 604 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s604">') + document.write('Use of numeric literal as array bound/subscript.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl06-cpp">') + document.write('CERT-C++:2016 DCL06-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 608 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s608">') + document.write('Use of explicitly undefined language feature.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc15-cpp">') + document.write('CERT-C++:2016 MSC15-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 611 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s611">') + document.write('Line splice used in // comment.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc04-cpp">') + document.write('CERT-C++:2016 MSC04-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 630 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s630">') + document.write('Duplicated enumeration value.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_int09-cpp">') + document.write('CERT-C++:2016 INT09-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 637 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s637">') + document.write('# operand followed by ##.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_pre05-cpp">') + document.write('CERT-C++:2016 PRE05-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 638 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s638">') + document.write('Memory allocation non-conformant with type.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp03-cpp">') + document.write('CERT-C++:2016 EXP03-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 643 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s643">') + document.write('Function return type is not errno_t.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl09-cpp">') + document.write('CERT-C++:2016 DCL09-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 671 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s671">') + document.write('Class data accessible thru non const handle.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_oop08-cpp">') + document.write('CERT-C++:2016 OOP08-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 699 S </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_s699">') + document.write('Macro terminated with semi-colon.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_pre11-cpp">') + document.write('CERT-C++:2016 PRE11-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 5 C </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_c5">') + document.write('Procedure contains infinite loop.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_mem05-cpp">') + document.write('CERT-C++:2016 MEM05-CPP,MEM12-CPP') + document.write('</a>') </script> </td></TR>
<TR><td bgcolor='yellow', align=center><font color='blue'> <CENTER>  1 </CENTER> </font></td><td bgcolor='yellow', ><font color='blue'> 1 D </font></td><td bgcolor='yellow', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d1">') + document.write('Unused procedure parameter.') + document.write('</a>') </script> </font></td><td bgcolor='yellow', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc13-cpp">') + document.write('CERT-C++:2016 MSC13-CPP') + document.write('</a>') </script> </font></td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 15 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d15">') + document.write('Unused procedural parameter.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc13-cpp">') + document.write('CERT-C++:2016 MSC13-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 25 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d25">') + document.write('Scope of variable could be reduced.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl07-cpp">') + document.write('CERT-C++:2016 DCL07-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 27 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d27">') + document.write('Variable should be declared static.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl15-cpp">') + document.write('CERT-C++:2016 DCL15-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 28 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d28">') + document.write('Potentially infinite loop found.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_mem05-cpp">') + document.write('CERT-C++:2016 MEM05-CPP,MEM12-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 37 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d37">') + document.write('Function has persistent local side effects.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl14-cpp">') + document.write('CERT-C++:2016 DCL14-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 54 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d54">') + document.write('Unsafe use of function pointer variable.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_exp08-cpp">') + document.write('CERT-C++:2016 EXP08-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 61 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d61">') + document.write('Procedure should be declared static.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl15-cpp">') + document.write('CERT-C++:2016 DCL15-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 63 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d63">') + document.write('No definition in system for prototyped procedure.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc15-cpp">') + document.write('CERT-C++:2016 MSC15-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 65 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d65">') + document.write('Void function has no side effects.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc06-cpp">') + document.write('CERT-C++:2016 MSC06-CPP,MSC07-CPP,MSC12-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 76 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d76">') + document.write('Procedure is not called or referenced in code analysed.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc06-cpp">') + document.write('CERT-C++:2016 MSC06-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 78 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d78">') + document.write('Global variable should be declared const.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl00-cpp">') + document.write('CERT-C++:2016 DCL00-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 81 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d81">') + document.write('Attempt to remove an open file.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_fio08-cpp">') + document.write('CERT-C++:2016 FIO08-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 83 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d83">') + document.write('Potentially repeated call to ungetc.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_fio13-cpp">') + document.write('CERT-C++:2016 FIO13-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 85 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d85">') + document.write('Filename not verified before fopen.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_fio02-cpp">') + document.write('CERT-C++:2016 FIO02-CPP,MSC08-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 91 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d91">') + document.write('Function return value potentially unused.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc13-cpp">') + document.write('CERT-C++:2016 MSC13-CPP') + document.write('</a>') </script> </td></TR>
<TR><td bgcolor='yellow', align=center><font color='blue'> <CENTER>  1 </CENTER> </font></td><td bgcolor='yellow', ><font color='blue'> 93 D </font></td><td bgcolor='yellow', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d93">') + document.write('Local variable should be declared const.') + document.write('</a>') </script> </font></td><td bgcolor='yellow', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl00-cpp">') + document.write('CERT-C++:2016 DCL00-CPP') + document.write('</a>') </script> </font></td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 94 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d94">') + document.write('Named variable declared but not used in code.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc13-cpp">') + document.write('CERT-C++:2016 MSC13-CPP') + document.write('</a>') </script> </td></TR>
<TR><td bgcolor='yellow', align=center><font color='blue'> <CENTER>  1 </CENTER> </font></td><td bgcolor='yellow', ><font color='blue'> 105 D </font></td><td bgcolor='yellow', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d105">') + document.write('DU anomaly dead code, var value is unused on all paths.') + document.write('</a>') </script> </font></td><td bgcolor='yellow', ><font color='blue'> <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc06-cpp">') + document.write('CERT-C++:2016 MSC06-CPP,MSC07-CPP,MSC12-CPP,MSC13-CPP') + document.write('</a>') </script> </font></td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 108 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d108">') + document.write('Tainted argument to unprototyped func ptr.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_str02-cpp">') + document.write('CERT-C++:2016 STR02-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 113 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d113">') + document.write('File closed more than once.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc15-cpp">') + document.write('CERT-C++:2016 MSC15-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 118 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d118">') + document.write('Object changed via dereferenced pointer.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl13-cpp">') + document.write('CERT-C++:2016 DCL13-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 120 D </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_d120">') + document.write('Pointer param should be declared pointer to const.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl13-cpp">') + document.write('CERT-C++:2016 DCL13-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 62 X </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_x62">') + document.write('Function prototype/defn return type mismatch (MR).') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc15-cpp">') + document.write('CERT-C++:2016 MSC15-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 63 X </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_x63">') + document.write('Function prototype/defn param type mismatch (MR).') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc15-cpp">') + document.write('CERT-C++:2016 MSC15-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 67 X </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_x67">') + document.write('Identifier is typographically ambiguous.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_dcl02-cpp">') + document.write('CERT-C++:2016 DCL02-CPP') + document.write('</a>') </script> </td></TR>
</TABLE>
</CENTER>
<BR>
 <CENTER> <TABLE bgcolor="#ECE2E2" BORDER WIDTH=80% >
<TR><th >  Number of Violations </th><th >  LDRA Code </th><th >  Recommendation Standards </th><th >  CERT-C++:2016 Code
 </th></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 5 Q </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_q5">') + document.write('File does not end with new line.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc15-cpp">') + document.write('CERT-C++:2016 MSC15-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 1 U </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_u1">') + document.write('Inter-file recursion found.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_mem05-cpp">') + document.write('CERT-C++:2016 MEM05-CPP,MEM12-CPP') + document.write('</a>') </script> </td></TR>
<TR><td align=center> <CENTER>  0 </CENTER> </td><td > 3 J </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/standards.htm#standard_j3">') + document.write('All internal linkage calls unreachable.') + document.write('</a>') </script> </td><td > <script language='javascript'> document.write(base_str + 'standards_info/html/cert-cpp_2016_model.htm#rule_cert-c%2B%2B%3A2016_msc06-cpp">') + document.write('CERT-C++:2016 MSC06-CPP') + document.write('</a>') </script> </td></TR>
</TABLE>
</CENTER>
<BR>
<BR>
 <CENTER> <TABLE bgcolor="#ECE2E2" BORDER WIDTH=80% >
<TR><td > Number of Rule Standards checked </td><td align=center> 169
 </td></TR>
<TR><td > Number of Checking Standards checked </td><td align=center> 1
 </td></TR>
<TR><td > Number of Recommendation Standards checked </td><td align=center> 153
 </td></TR>
<TR><td > Number of Informational Standards checked </td><td align=center> 1
 </td></TR>
<TR><td > Total Standards checked </td><td align=center> 323
 </td></TR>
<TR><td > Total Standards checked including Informational </td><td align=center> 324
 </td></TR>
</TABLE>
</CENTER>
<BR>
<BR>
<a id="banner_grabber.cpp">
</a><BR>
<BR>
<P class="pagebreak">
<BR>
<P>
<BR>
<font color="#FF0000"><CENTER> <h3>OVERALL RESULT:  FAIL</h3>
</CENTER>
 </font>
 <BR>
<a id="procedure_table"> 
</a><BR>
 Out of 7 program components, 1  (14.29 %) passes ( of which 0 conditionally pass ) 
 and  6 fail ( of which 0 fail only because of insufficient comments )
<BR>
<BR>
<h4>Procedure Results
</h4>
 <CENTER> <TABLE BORDER bgcolor="#ECE2E2" WIDTH=80% >  <TR> <TD>
<TABLE bgcolor="#ECE2E2" WIDTH=100% >
<TR>
<th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th>
<th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th>
<th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th>
<th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th>
<th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th>
</TR>
<TR ALIGN=LEFT><th colspan = 11> <TT> Code Review Result </TT> </th> <th WIDTH=1%> &nbsp;</th>
<th colspan = 11 WIDTH=19%> <TT> Procedure </TT> </th> <th WIDTH=1%> &nbsp;</th>
<th colspan = 11 WIDTH=19%> <TT> Source File </TT> </th> <th WIDTH=1%> &nbsp;</th>
<th colspan = 11 WIDTH=19%> <TT> <a href="#unq_key">Unique Violations</a> </TT> </th> <th WIDTH=1%> &nbsp;</th>
<th colspan = 11 WIDTH=19%> <TT> <a href="#unq_key">Failure Density</a> </TT> </th> <th WIDTH=1%> &nbsp;</th>
</TR>
<TR ALIGN=LEFT><th colspan = 44 WIDTH=79%> <TT> &nbsp; </TT> </th> <th WIDTH=1%> &nbsp;</th>
<th WIDTH=1%> &nbsp;</th>
<th WIDTH=1%> &nbsp;</th>
<th WIDTH=1%> &nbsp;</th>
<th colspan = 11> <TT> (Viols/R.Line %) </TT> </th> <th WIDTH=1%> &nbsp;</th>
</TR>
<TR ALIGN=LEFT><td colspan=11> <font color="#FF0000"> FAIL </font> </td> <td></td><td colspan=11>  <a href="#global_prog">Global Program</a>  </td> <td></td></TR>
<TR ALIGN=LEFT><td colspan=11> <font color="#FF0000"> FAIL </font> </td> <td></td><td colspan=11>  <a href="#main_banner_grabber.cpp_banner_grabber.cpp_1">main</a>  </td> <td></td><td colspan=11>  banner_grabber.cpp  </td> <td></td><td colspan=3 bgcolor="#E17B87"> 25 </td> <td colspan=8 bgcolor="#AFE1AB"> <font color="#AFE1AB"> - </font> </td><td></td>
<td colspan=3 bgcolor="#E17B87"> 20 </td> <td colspan=8 bgcolor="#AFE1AB"> <font color="#AFE1AB"> - </font> </td><td></td>
</TR>
<TR ALIGN=LEFT><td colspan=11> <font color="#008000"> Pass </font> </td> <td></td><td colspan=11>  BannerGrabber::BannerGrabber  </td> <td></td><td colspan=11>  banner_grabber.cpp  </td> <td></td> <td colspan=11 bgcolor="#5FC05A"> 0 </td><td></td>
 <td colspan=11 bgcolor="#5FC05A"> 0 </td><td></td>
</TR>
<TR ALIGN=LEFT><td colspan=11> <font color="#FF0000"> FAIL </font> </td> <td></td><td colspan=11>  <a href="#bannergrabber::~bannergrabber_banner_grabber.cpp_banner_grabber.cpp_3">BannerGrabber::~BannerGrabber</a>  </td> <td></td><td colspan=11>  banner_grabber.cpp  </td> <td></td><td colspan=1 bgcolor="#E17B87"> 6 </td> <td colspan=10 bgcolor="#AFE1AB"> <font color="#AFE1AB"> - </font> </td><td></td>
<td colspan=3 bgcolor="#E17B87"> 20 </td> <td colspan=8 bgcolor="#AFE1AB"> <font color="#AFE1AB"> - </font> </td><td></td>
</TR>
<TR ALIGN=LEFT><td colspan=11> <font color="#FF0000"> FAIL </font> </td> <td></td><td colspan=11>  <a href="#bannergrabber::initializesocket_banner_grabber.cpp_banner_grabber.cpp_4">BannerGrabber::initializeSocket</a>  </td> <td></td><td colspan=11>  banner_grabber.cpp  </td> <td></td><td colspan=4 bgcolor="#E17B87"> 31 </td> <td colspan=7 bgcolor="#AFE1AB"> <font color="#AFE1AB"> - </font> </td><td></td>
<td colspan=8 bgcolor="#E17B87"> 74 </td> <td colspan=3 bgcolor="#AFE1AB"> <font color="#AFE1AB"> - </font> </td><td></td>
</TR>
<TR ALIGN=LEFT><td colspan=11> <font color="#FF0000"> FAIL </font> </td> <td></td><td colspan=11>  <a href="#bannergrabber::connecttotarget_banner_grabber.cpp_banner_grabber.cpp_5">BannerGrabber::connectToTarget</a>  </td> <td></td><td colspan=11>  banner_grabber.cpp  </td> <td></td><td colspan=3 bgcolor="#E17B87"> 22 </td> <td colspan=8 bgcolor="#AFE1AB"> <font color="#AFE1AB"> - </font> </td><td></td>
<td colspan=5 bgcolor="#E17B87"> 44 </td> <td colspan=6 bgcolor="#AFE1AB"> <font color="#AFE1AB"> - </font> </td><td></td>
</TR>
<TR ALIGN=LEFT><td colspan=11> <font color="#FF0000"> FAIL </font> </td> <td></td><td colspan=11>  <a href="#bannergrabber::grabbanner_banner_grabber.cpp_banner_grabber.cpp_6">BannerGrabber::grabBanner</a>  </td> <td></td><td colspan=11>  banner_grabber.cpp  </td> <td></td><td colspan=2 bgcolor="#E17B87"> 17 </td> <td colspan=9 bgcolor="#AFE1AB"> <font color="#AFE1AB"> - </font> </td><td></td>
<td colspan=3 bgcolor="#E17B87"> 29 </td> <td colspan=8 bgcolor="#AFE1AB"> <font color="#AFE1AB"> - </font> </td><td></td>
</TR>
</TD> </TR>
</TABLE>
</TABLE>
</CENTER>
<BR>
<BR>
<h4><a id="global_prog">Global Information
</a></h4>
<BR>
<h4><span style='display:block;width:5%;float:left;'>&nbsp;</span> Global Basic Information 
</h4>
 <CENTER> <TABLE bgcolor="#ECE2E2" BORDER WIDTH=60% >
<TR><td > Number of procedures: </td><td align=center> 6
 </td></TR>
<TR><td > Number of locally uncalled procedures: </td><td align=center> 1
 </td></TR>
<TR><td > Maximum loop depth: </td><td align=center> 0
 </td></TR>
<TR><td > Total Cyclomatic Complexity: </td><td align=center> 9
 </td></TR>
<TR><td > Number of reformatted executable lines: </td><td align=center> 145
 </td></TR>
<TR><td > Number of lines of comments: </td><td align=center> 5
 </td></TR>
</TABLE>
</CENTER>
<BR>
<HR>
<a id="procedure_reports">
</a><BR>
<CENTER> <h2>Summary Report on all Program Components which FAIL
</h2>
</CENTER>
 <BR>
<BR>
<CENTER><TABLE BORDER WIDTH=50%><TR><TH BGCOLOR="#FF0000"><font color='#FBFCC8' size='5'> Globals / code outside procedures - FAIL </font></TH></TR> </TABLE></CENTER>
<BR>
<h4><span style='display:block;width:5%;float:left;'>&nbsp;</span> Standards Violation Summary 
</h4>
 <CENTER> <TABLE bgcolor="#ECE2E2" BORDER WIDTH=60% >
<TR><th >  Code </th><th >  Src Line </th><th >  Violation </th><th >  Standard </th></TR>
<TR><td align=center> <a id="first_469_s">M</a> </td><td align=center> 12 </td><td > No copy constructor for complex destructor. </td><td > CERT-C++:2016 MEM51-CPP </td></TR>
<TR><td align=center> <a id="first_470_s">M</a> </td><td align=center> 12 </td><td > No assignment operator for complex destrtor. </td><td > CERT-C++:2016 MEM51-CPP </td></TR>
</TABLE>
</CENTER>
<BR>
 <CENTER> <TABLE bgcolor="#FFFFF2" >
<TR><th >  [ </th><td > <a href="#top_of_rep">Top of Report</a> </td><th >  | </th><td > <a href="#key_to_terms">Key to Terms</a> </td><th >  | </th><td > <a href="#procedure_table">Procedure Table</a> </td><th >  | </th><td > <a href="#contents">Contents</a> </td><th >  ]
 </th></TR>
</TABLE>
</CENTER>
<BR>
<BR>
<BR>
<a id="main_banner_grabber.cpp_banner_grabber.cpp_1">
</a><BR>
<BR>
<CENTER><TABLE BORDER WIDTH=50%><TR><TH BGCOLOR="#FF0000"><font size='5'> <a href="ldra://editor/?File=/home/student/ncs0016/senior_design/gen-ai/banner_grabber.cpp&Line=77 " class=set1> main<BR>(77 to 118 banner_grabber.cpp) - FAIL </font></a></TH></TR></TABLE></CENTER>
<BR>
<h4><span style='display:block;width:5%;float:left;'>&nbsp;</span> Standards Violation Summary 
</h4>
 <CENTER> <TABLE bgcolor="#ECE2E2" BORDER WIDTH=60% >
<TR><th >  Code </th><th >  Line </th><th >  Violation </th><th >  Standard </th></TR>
<TR><td align=center> <a id="first_118_s">M</a> </td><td align=center> 77 </td><td > main must be int (void) or int (int,char*[]). </td><td > CERT-C++:2016 ENV31-C </td></TR>
<TR><td align=center> <a id="first_114_s">M</a> </td><td align=center> 96 </td><td > Expression is not Boolean. </td><td > CERT-C++:2016 EXP45-C </td></TR>
<TR><td align=center> <a id="first_527_s">M</a> </td><td align=center> 118 </td><td > No master exception handler. </td><td > CERT-C++:2016 ERR51-CPP,ERR56-CPP </td></TR>
<TR><td align=center> <a id="first_458_s">M</a> </td><td align=center> 95 </td><td > Implicit conversion: actual to formal param (MR). :  (int and unsigned int):  param  1 </td><td > CERT-C++:2016 EXP37-C,INT01-CPP,INT02-CPP,INT07-CPP,MSC05-CPP,STR04-CPP </td></TR>
<TR><td align=center> M </td><td align=center> 113 </td><td > Procedure call has no prototype declared. : e.what </td><td > CERT-C++:2016 EXP37-C </td></TR>
</TABLE>
</CENTER>
<BR>
<BR>
 <CENTER> <TABLE bgcolor="#FFFFF2" >
<TR><th >  [ </th><td > <a href="#top_of_rep">Top of Report</a> </td><th >  | </th><td > <a href="#key_to_terms">Key to Terms</a> </td><th >  | </th><td > <a href="#procedure_table">Procedure Table</a> </td><th >  | </th><td > <a href="#contents">Contents</a> </td><th >  ]
 </th></TR>
</TABLE>
</CENTER>
<BR>
<BR>
<BR>
<a id="bannergrabber::~bannergrabber_banner_grabber.cpp_banner_grabber.cpp_3">
</a><BR>
<BR>
<CENTER><TABLE BORDER WIDTH=50%><TR><TH BGCOLOR="#FF0000"><font size='5'> <a href="ldra://editor/?File=/home/student/ncs0016/senior_design/gen-ai/banner_grabber.cpp&Line=20 " class=set1> BannerGrabber::~BannerGrabber<BR>(20 to 26 banner_grabber.cpp) - FAIL </font></a></TH></TR></TABLE></CENTER>
<BR>
<h4><span style='display:block;width:5%;float:left;'>&nbsp;</span> Standards Violation Summary 
</h4>
 <CENTER> <TABLE bgcolor="#ECE2E2" BORDER WIDTH=60% >
<TR><th >  Code </th><th >  Line </th><th >  Violation </th><th >  Standard </th></TR>
<TR><td align=center> M </td><td align=center> 24 </td><td > Procedure call has no prototype declared. : close </td><td > CERT-C++:2016 EXP37-C </td></TR>
</TABLE>
</CENTER>
<BR>
<BR>
 <CENTER> <TABLE bgcolor="#FFFFF2" >
<TR><th >  [ </th><td > <a href="#top_of_rep">Top of Report</a> </td><th >  | </th><td > <a href="#key_to_terms">Key to Terms</a> </td><th >  | </th><td > <a href="#procedure_table">Procedure Table</a> </td><th >  | </th><td > <a href="#contents">Contents</a> </td><th >  ]
 </th></TR>
</TABLE>
</CENTER>
<BR>
<BR>
<BR>
<a id="bannergrabber::initializesocket_banner_grabber.cpp_banner_grabber.cpp_4">
</a><BR>
<BR>
<CENTER><TABLE BORDER WIDTH=50%><TR><TH BGCOLOR="#FF0000"><font size='5'> <a href="ldra://editor/?File=/home/student/ncs0016/senior_design/gen-ai/banner_grabber.cpp&Line=28 " class=set1> BannerGrabber::initializeSocket<BR>(28 to 42 banner_grabber.cpp) - FAIL </font></a></TH></TR></TABLE></CENTER>
<BR>
<h4><span style='display:block;width:5%;float:left;'>&nbsp;</span> Standards Violation Summary 
</h4>
 <CENTER> <TABLE bgcolor="#ECE2E2" BORDER WIDTH=60% >
<TR><th >  Code </th><th >  Line </th><th >  Violation </th><th >  Standard </th></TR>
<TR><td align=center> <a id="first_44_s">C</a> </td><td align=center> 33 </td><td > Use of banned function, type or variable.    : errno </td><td > CERT-C++:2016 CON37-C,DCL03-CPP,ERR01-CPP,ERR06-CPP,ERR32-C,ERR34-C,EXP47-C,FIO03-CPP,FIO05-CPP,FIO06-CPP,FIO09-CPP,FIO18-CPP,FIO19-CPP,FIO37-C,FIO40-C,INT05-CPP,INT06-CPP,MEM08-CPP,MSC30-C,MSC33-C,MSC50-CPP,OOP57-CPP,SIG02-CPP,SIG35-C,STR03-CPP </td></TR>
<TR><td align=center> M </td><td align=center> 40 </td><td > Casting operation on a pointer. : (struct timeval* to char*): ( const char * ) & tv </td><td > CERT-C++:2016 EXP36-C,EXP39-C </td></TR>
<TR><td align=center> M </td><td align=center> 40 </td><td > Cast to an unrelated type. : (struct timeval* to char*): ( const char * ) & tv </td><td > CERT-C++:2016 EXP11-CPP,EXP39-C,EXP57-CPP </td></TR>
<TR><td align=center> M </td><td align=center> 41 </td><td > Casting operation on a pointer. : (struct timeval* to char*): ( const char * ) & tv </td><td > CERT-C++:2016 EXP36-C,EXP39-C </td></TR>
<TR><td align=center> M </td><td align=center> 41 </td><td > Cast to an unrelated type. : (struct timeval* to char*): ( const char * ) & tv </td><td > CERT-C++:2016 EXP11-CPP,EXP39-C,EXP57-CPP </td></TR>
<TR><td align=center> M </td><td align=center> 37 </td><td > Local not initialised at declaration. : tv </td><td > CERT-C++:2016 DCL19-CPP,MEM51-CPP </td></TR>
<TR><td align=center> M </td><td align=center> 40 </td><td > Procedure call has no prototype declared. : setsockopt </td><td > CERT-C++:2016 EXP37-C </td></TR>
<TR><td align=center> <a id="first_121_d">M</a> </td><td align=center> 30 </td><td > errno neither set nor checked for errno setting function. : socket </td><td > CERT-C++:2016 ERR10-CPP,ERR30-C </td></TR>
</TABLE>
</CENTER>
<BR>
<BR>
 <CENTER> <TABLE bgcolor="#FFFFF2" >
<TR><th >  [ </th><td > <a href="#top_of_rep">Top of Report</a> </td><th >  | </th><td > <a href="#key_to_terms">Key to Terms</a> </td><th >  | </th><td > <a href="#procedure_table">Procedure Table</a> </td><th >  | </th><td > <a href="#contents">Contents</a> </td><th >  ]
 </th></TR>
</TABLE>
</CENTER>
<BR>
<BR>
<BR>
<a id="bannergrabber::connecttotarget_banner_grabber.cpp_banner_grabber.cpp_5">
</a><BR>
<BR>
<CENTER><TABLE BORDER WIDTH=50%><TR><TH BGCOLOR="#FF0000"><font size='5'> <a href="ldra://editor/?File=/home/student/ncs0016/senior_design/gen-ai/banner_grabber.cpp&Line=44 " class=set1> BannerGrabber::connectToTarget<BR>(44 to 60 banner_grabber.cpp) - FAIL </font></a></TH></TR></TABLE></CENTER>
<BR>
<h4><span style='display:block;width:5%;float:left;'>&nbsp;</span> Standards Violation Summary 
</h4>
 <CENTER> <TABLE bgcolor="#ECE2E2" BORDER WIDTH=60% >
<TR><th >  Code </th><th >  Line </th><th >  Violation </th><th >  Standard </th></TR>
<TR><td align=center> M </td><td align=center> 55 </td><td > Casting operation on a pointer. : (struct sockaddr_in* to struct*): ( struct sockaddr * ) & server_addr </td><td > CERT-C++:2016 EXP36-C,EXP39-C </td></TR>
<TR><td align=center> M </td><td align=center> 55 </td><td > Cast to an unrelated type. : (struct sockaddr_in* to struct*): ( struct sockaddr * ) & server_addr </td><td > CERT-C++:2016 EXP11-CPP,EXP39-C,EXP57-CPP </td></TR>
<TR><td align=center> M </td><td align=center> 46 </td><td > Local not initialised at declaration. : server_addr </td><td > CERT-C++:2016 DCL19-CPP,MEM51-CPP </td></TR>
<TR><td align=center> M </td><td align=center> 48 </td><td > Procedure call has no prototype declared. : htons </td><td > CERT-C++:2016 EXP37-C </td></TR>
<TR><td align=center> M </td><td align=center> 50 </td><td > Procedure call has no prototype declared. : inet_pton </td><td > CERT-C++:2016 EXP37-C </td></TR>
<TR><td align=center> M </td><td align=center> 55 </td><td > Procedure call has no prototype declared. : connect </td><td > CERT-C++:2016 EXP37-C </td></TR>
</TABLE>
</CENTER>
<BR>
<BR>
<a id="first_1_d">
</a> <CENTER> <TABLE bgcolor="#ECE2E2" BORDER WIDTH=60% >
<TR><th >  Code </th><th >  Violation </th><th >  Parameter
 </th></TR>
<TR><td align=center> O </td><td > Unused procedure parameter </td><td > ipAddress
 </td></TR>
</TABLE>
</CENTER>
<BR>
 <CENTER> <TABLE bgcolor="#FFFFF2" >
<TR><th >  [ </th><td > <a href="#top_of_rep">Top of Report</a> </td><th >  | </th><td > <a href="#key_to_terms">Key to Terms</a> </td><th >  | </th><td > <a href="#procedure_table">Procedure Table</a> </td><th >  | </th><td > <a href="#contents">Contents</a> </td><th >  ]
 </th></TR>
</TABLE>
</CENTER>
<BR>
<BR>
<BR>
<a id="bannergrabber::grabbanner_banner_grabber.cpp_banner_grabber.cpp_6">
</a><BR>
<BR>
<CENTER><TABLE BORDER WIDTH=50%><TR><TH BGCOLOR="#FF0000"><font size='5'> <a href="ldra://editor/?File=/home/student/ncs0016/senior_design/gen-ai/banner_grabber.cpp&Line=62 " class=set1> BannerGrabber::grabBanner<BR>(62 to 74 banner_grabber.cpp) - FAIL </font></a></TH></TR></TABLE></CENTER>
<BR>
<h4><span style='display:block;width:5%;float:left;'>&nbsp;</span> Standards Violation Summary 
</h4>
 <CENTER> <TABLE bgcolor="#ECE2E2" BORDER WIDTH=60% >
<TR><th >  Code </th><th >  Line </th><th >  Violation </th><th >  Standard </th></TR>
<TR><td align=center> <a id="first_623_s">M</a> </td><td align=center> 69 </td><td > String assigned to non const object. </td><td > CERT-C++:2016 STR05-CPP,STR30-C </td></TR>
<TR><td align=center> M </td><td align=center> 65 </td><td > Procedure call has no prototype declared. : recv </td><td > CERT-C++:2016 EXP37-C </td></TR>
</TABLE>
</CENTER>
<BR>
<BR>
 <CENTER> <TABLE bgcolor="#FFFFF2" >
<TR><th >  [ </th><td > <a href="#top_of_rep">Top of Report</a> </td><th >  | </th><td > <a href="#key_to_terms">Key to Terms</a> </td><th >  | </th><td > <a href="#procedure_table">Procedure Table</a> </td><th >  | </th><td > <a href="#contents">Contents</a> </td><th >  ]
 </th></TR>
</TABLE>
</CENTER>
<BR>
<BR>
<BR>
<a id="key_to_terms">
</a><BR>
<CENTER> <h2>Key to Terms
</h2>
</CENTER>
 <BR>
<h4>Standards violations for procedures are printed in tables with code markers as follows:
</h4>
<BR>
 <CENTER> <TABLE bgcolor="#D7EDED" BORDER >
<TR ALIGN=CENTER><th >  Code </th><th >  (Line) </th><th >  Violation </th><th >  Standard </th></TR>
<TR ALIGN=CENTER><td > M </td><td > (Source line number) </td><td > [Text of Rule standard] </td><td > [Appropriate rule reference] </td></TR>
<TR ALIGN=CENTER><td > C </td><td>&nbsp;</td><td > [Text of Checking standard] </td><td>&nbsp;</td></TR>
<TR ALIGN=CENTER><td > O </td><td>&nbsp;</td><td > [Text of Recommendation standard] </td><td>&nbsp;</td></TR>
<TR ALIGN=CENTER><th colspan = 4>  <CODE> [Source: Text of line from Source file] </CODE> </th></TR>
</TABLE>
</CENTER>
<BR>
<BR>
<font color=black>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Checking standards are considered mandatory but individual instances may be overridden
      by adding annotations to the source code

<BR>
<font color=black>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Recommendation standards provide additional quality criteria but may be violated
<BR>
<BR>
<font color=black>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;For some standards violations, additional information is provided in results tables
<BR>
<font color=black>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Note that source lines do not show macro expansions
<BR>
<BR>
<font color=black>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"Off" in Summary tables indicates that a standard is switched off
      in the <lang>pen.dat file
<BR>
<font color=black>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"MR" in Summary tables indicates a MISRA Restricted standard
      which cannot be checked without the MISRA licence option.
<BR>
<BR>
<BR>
<h4>A summary is given of the pass/fail result of each program component as follows:
</h4>
<BR>
 <CENTER> <TABLE bgcolor="#D7EDED" >
<TR><td > Components which pass all standards are marked:  </td><td bgcolor='green', ><font color='white'> Pass
 </font></td></TR>
<TR><td > Components which fail only Recommendation standards are marked:  </td><td bgcolor='yellow', ><font color='blue'> Conditional Pass
 </font></td></TR>
<TR><td > Components which fail on insufficient comments only are marked:  </td><td bgcolor='orange', ><font color='blue'> Comment FAIL
 </font></td></TR>
<TR><td > Components which violate Rule standards are marked:  </td><td bgcolor='#FF8181', ><font color='blue'> FAIL
 </font></td></TR>
</TABLE>
</CENTER>
<BR>
<a id="unq_key">
</a><BR>
<BR>
<h4>Procedure Results table breakdown (Example Only)
</h4>
<BR>
 <CENTER> <TABLE BORDER bgcolor="#ECE2E2" WIDTH=60% >  <TR> <TD>
<TABLE bgcolor="#ECE2E2" WIDTH=100% >
<TR>
<th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th>
<th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th><th width=5></th>
</TR>
<TR ALIGN=LEFT><th colspan = 11> <TT> Unique Violations </TT> </th> <th WIDTH=1%> &nbsp;</th>
<th colspan = 11 WIDTH=49%> <TT> Failure Density </TT> </th> <th WIDTH=1%> &nbsp;</th>
</TR>
<TR ALIGN=LEFT><th colspan = 11 WIDTH=49%> <TT> &nbsp; </TT> </th> <th WIDTH=1%> &nbsp;</th>
<th colspan = 11> <TT> (Viols/R.Line %) </TT> </th> <th WIDTH=1%> &nbsp;</th>
</TR>
<TR ALIGN=LEFT><td colspan=7 bgcolor="#E17B87"> 65 </td> <td colspan=4 bgcolor="#AFE1AB"> <font color="#AFE1AB"> - </font> </td><td></td>
<td colspan=11 bgcolor="#E17B87"><font color="white"> 150 </font></td><td></td>
</TR>
<TR ALIGN=LEFT><td colspan=4 bgcolor="#E17B87"> 35 </td> <td colspan=7 bgcolor="#AFE1AB"> <font color="#AFE1AB"> - </font> </td><td></td>
<td colspan=4 bgcolor="#E17B87"> 39 </td> <td colspan=7 bgcolor="#AFE1AB"> <font color="#AFE1AB"> - </font> </td><td></td>
</TR>
</TD> </TR>
</TABLE>
</TABLE>
</CENTER>
<BR>
<BR>
<BR>
<font color=black>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The Violation density for a function is the number of violations per reformatted line, expressed as a percentage.
<BR>
<font color=black>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;It is an indication of code quality.
<BR>
<BR>
<font color=black>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Functions with a high violation density are likely to be smaller functions with a large number of violations.
<BR>
<BR>
<font color=black>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Lower density may indicate larger functions with fewer violations.
<BR>
<BR>
<font color=#6571C9>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(nViols / nRefLines) x 100
<BR>
<BR>
<font color=black>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;where:
<BR>
<BR>
<font color=#6571C9>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nViols = number of standard violations in a function.
<BR>
<BR>
<font color=black>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and:
<BR>
<BR>
<font color=#6571C9>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nRefLines = number of reformatted lines in a function.
<BR>
<BR>
<font color=black>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The unique standards failure ratio is an indication of variety of standards violations in a module.
<BR>
<BR>
<font color=black>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Thus a function containing one instance of several different standards will have a high ratio, 
<BR>
<font color=black>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while a function that has violated only one standard will have a low ratio.
<BR>
<BR>
<HR>
 <CENTER> <TABLE bgcolor="#FFFFF2" >
<TR><th >  [ </th><td > <a href="#top_of_rep">Top of Report</a> </td><th >  | </th><td > <a href="#procedure_table">Procedure Table</a> </td><th >  | </th><td > <a href="#contents">Contents</a> </td><th >  ]
 </th></TR>
</TABLE>
</CENTER>
<BR>
<BR>
<CENTER><H3> End of Code Review Report </H3>
</CENTER>
<CENTER><H3>  </H3>
</CENTER>
<CENTER><H3> Copyright &copy 2019 Liverpool Data Research Associates </H3>
</CENTER>
<center>
<img src='/apps/ldra2019/ldra_toolsuite/images//blue_line.gif' width='80%' height='10'>
</center>
</BODY>






</HTML>